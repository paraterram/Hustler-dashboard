{
  "name": "spimgis",
  "description": "spimgis",
  "version": "0.0.1",
  "private": true,
  "engines": {
    "node": "0.10.x",
    "npm": "1.4.20"
  },
  "dependencies": {
    "async": "^1.3.0",
    "aws-sdk": "^2.0.11",
    "base64-url": "^1.2.1",
    "brfs": "^1.0.2",
    "chai": "~1.10.0",
    "colors": "^1.1.2",
    "config": "0.4.x",
    "connect-mongostore": "^0.1.4",
    "csv": "^0.4.0",
    "express": "3.x",
    "googleapis": "^2.0.5",
    "http-auth": "2.1.7",
    "jade": "^1.3.1",
    "jsforce": "1.1",
    "judgements": "git+ssh://git@github.com:thenothingco/judgements.git#b3db0496f9ffbd431c541f4872f064a476b5aa5d",
    "line-by-line": "~0.1.3",
    "minimist": "^1.2.0",
    "mocha": "~2.1.0",
    "models": "git+ssh://git@github.com/thenothingco/models.git#7d2ca1c2ad5d1a0ab5425d32f4dcb16e4e867d1e",
    "moment": "^2.7.0",
    "mongodb": "1.4.5",
    "mongoose": "3.8",
    "node-horseman": "^3.1.1",
    "node-mongo-rbac": "git+ssh://git@github.com:stevevitali/node-mongo-rbac.git#235c144c51566cfdc976465437e8d77ed3ea040e",
    "officegen": "^0.2.9",
    "passport": "^0.2.0",
    "passport-local": "^1.0.0",
    "pdfkit": "^0.7.1",
    "pg": "~2.8.3",
    "pg-query": "~0.7.0",
    "point-in-polygon": "^1.0.0",
    "proxyquire": "~1.3.0",
    "request": "^2.24.0",
    "requireindex": "1.0.x",
    "s3": "^4.0.0",
    "sendgrid": "^1.1.0",
    "sinon": "~1.12.2",
    "slack-node": "0.0.93",
    "soap": "^0.9.1",
    "stream": "0.0.1",
    "sv2json": "0.0.2",
    "tspsolver": "0.0.2",
    "twilio": "^2.2.1",
    "underscore": "^1.6.0",
    "util": "^0.10.3"
  },
  "devDependencies": {
    "jscs": "^1.13.1",
    "jshint": "^2.7.0",
    "request": "2.24.x"
  },
  "scripts": {
    "start": "node server.js --env=production",
    "debug": "node --debug server.js",
    "dev": "open http://127.0.0.1:8080/debug?ws=127.0.0.1:8080&port=5858; open http://localhost:3000/; (node-inspector &); node --debug server.js",
    "build": "npm run initdb",
    "flushdb": "node scripts/postgis/flushdb.js",
    "initdb": "node scripts/postgis/bootstrap.js",
    "insertdata": "node scripts/postgis/insertdata.js",
    "addcenter": "node scripts/postgis/addcenter.js",
    "create_tax_objects": "node scripts/salesforce/create_tax_objects.js",
    "create_property_objects": "node scripts/salesforce/create_property_objects.js",
    "create_tlo_objects": "node scripts/salesforce/create_tlo_objects.js",
    "create_contact_objects": "node scripts/salesforce/create_contact_objects.js",
    "create_account_contact_roles": "node scripts/salesforce/create_account_contact_roles",
    "fetch_tlo_contacts": "node scripts/salesforce/analysis/fetch_tlo_contacts",
    "find_contiguity": "node scripts/salesforce/analysis/find_contiguity",
    "update_city_owners": "node scripts/salesforce/analysis/update_city_owners",
    "do_something_with_mongodb": "node scripts/mongodb/do_something_with_mongodb",
    "migrate_OPA_data": "node scripts/mongodb/migration/migrate_OPA_data",
    "upload_BRT_data": "node scripts/mongodb/upload_BRT_data",
    "upload_OPA_data": "node scripts/mongodb/upload_OPA_data",
    "upload_MLS_data": "node scripts/mongodb/upload_MLS_data",
    "migrate_PNQ_data": "node scripts/mongodb/migration/migrate_PNQ_data",
    "migrate_BRT_contacts": "node scripts/mongodb/migration/migrate_BRT_contacts",
    "get_contacts_and_phones": "node scripts/salesforce/analysis/get_contacts_and_phones",
    "upload_tlo_to_mongo": "node scripts/mongodb/upload_tlo_to_mongo",
    "fetch_dead_people": "node scripts/salesforce/analysis/fetch_dead_people",
    "migrate_geospatial_data": "node scripts/mongodb/migration/migrate_geospatial_data",
    "update_AQ_scores": "node scripts/mongodb/update_AQ_scores",
    "transfer_AQ_scores": "node scripts/mongodb/transfer_AQ_scores",
    "fetch_AQs_and_contacts": "node scripts/mongodb/analysis/fetch_AQs_and_contacts",
    "create_scraper_prop_txt": "node scripts/scraper/create_scraper_prop_txt",
    "synchronize_AQ_stages": "node scripts/mongodb/synchronize_AQ_stages",
    "check_parcel_equivalence": "node scripts/parcel_tests/check_parcel_equivalence",
    "generate_parcel_lists": "node scripts/parcel_tests/generate_parcel_lists",
    "find_relative_owners": "node scripts/mongodb/analysis/find_relative_owners",
    "remove_useless_properties": "node scripts/salesforce/remove_useless_properties",
    "find_krinsky_owned": "node scripts/mongodb/analysis/find_krinsky_owned",
    "sync_mongo_accounts_with_sf": "node scripts/synchronization/sync_mongo_accounts_with_sf",
    "sync_mongo_contacts_with_sf": "node scripts/synchronization/sync_mongo_contacts_with_sf",
    "upload_PNQ_scores_to_mongo": "node scripts/mongodb/upload_PNQ_scores",
    "transfer_PNQ_scores_to_mongo": "node scripts/mongodb/transfer_PNQ_scores",
    "upload_permit_data": "node scripts/mongodb/upload_permit_data",
    "find_developable_zone": "node scripts/mongodb/analysis/find_developable_zone",
    "transfer_phones_to_mongo": "node scripts/mongodb/transfer_phones_to_mongo",
    "add_centroid_field": "node scripts/mongodb/migration/add_centroid_field",
    "upload_sheriff_sales": "node scripts/mongodb/upload_sheriff_sales.js",
    "upload_recorded_deeds": "node scripts/mongodb/upload_recorded_deeds.js",
    "migrate_SF_deals_to_mongo": "node scripts/mongodb/migration/migrate_SF_deals_to_mongo.js",
    "migrate_SF_buyers_to_mongo": "node scripts/mongodb/migration/migrate_SF_buyers_to_mongo.js",
    "dedupe_mongo_phones": "node scripts/mongodb/migration/dedupe_mongo_phones.js",
    "devED_and_devING_zones": "node scripts/mongodb/analysis/devED_and_devING_zones.js",
    "krinsky_zip_code_analysis": "node scripts/mongodb/analysis/krinsky_zip_code_analysis.js",
    "krinsky_similar_properties": "node scripts/mongodb/analysis/krinsky_similar_properties.js",
    "construct_TLO_CSV": "node scripts/TLO/construct_TLO_CSV.js",
    "developing_zone_geoquery": "node scripts/mongodb/analysis/developing_zone_geoquery.js",
    "TLO_miss_OPA_owner2": "node scripts/TLO/TLO_miss_OPA_owner2.js"
  },
  "main": "server.js"
}
